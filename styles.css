:root {
    --Btn: rgb(63, 76, 96);
    --Btn_hover: rgb(34, 48, 89);
    --Btn_active: rgb(15, 34, 94);
    --Text-color: lightgray;
    --bg-color: rgb(12, 17, 24);
    --Input-color: rgb(40, 53, 75);
    --Input-colorV2: rgb(32, 39, 51);
    --table-color: var(----Input-color);

    --hr: #555
}
body {
    background-color: var(--bg-color);
    color: var(--Text-color);
    
    margin-bottom: 15px;
    margin-right: 5px;
    overflow: hidden;
    transition: height 0.6s ease;
}
body::after {
    content: "";
    display: block;
    height: 40px; /* Height of the footer */
}
#Pagetitle {
    margin-right: 40px;
}
.Btn {
    background-color: var(--bg-color);
    color: var(--Text-color);
    border: 1px solid var(--Btn);
    border-radius: 4px;
    padding: 8px 16px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}
.Btn:hover {
    background-color: var(--Btn_hover);
}
.Btn:active:not(:disabled) {
    background-color: var(--Btn_active);
    transition: none;
}
#header {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 10px;
}
.HDRSS {
    opacity: 0;
    position: absolute;
    top: 50px;
    width: 98vw;
    overflow: scroll;
    height: 500px;
}
#HDRSSBtn {
    display: flex;
    width: 100%;
}
#HDClassicBtn {
    display: flex;
    width: 100%;
}
.active {
    background-color: var(--Btn_active);
}
footer {
    position: fixed;
    bottom: 0;
    width: 98vw;
    height: 40px;
    background-color: var(--bg-color);
    border-top: 1px solid #ccc;
    display: flex;
    justify-content:flex-start;
    align-items:center;
}
.fullpage-btn {
    position: absolute;
    right: 0;
}
#ParentPreview{
    max-width: 10000px;
    overflow-x: hidden;
}
table {
    width: 100%;
    border-collapse: collapse;
    background-color: var(--bg-color);
    table-layout: auto;
}

td, th {
    text-align: center;
    vertical-align: middle;
    border: 1px solid #ccc;
    padding: 0;
}
th {
    background-color: var(--Input-color);
    border: 1px solid #d1d5db;
    font-weight: bold;
    padding: 8px;
    width: fit-content;
}
input[type=number],
input[type=number]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    appearance: none;
    -moz-appearance: textfield;
}
input.autoInput,
select.autoInput {
    width: auto;
    height: inherit;
    overflow: hidden;
    border: none;
    box-sizing: border-box;
    padding: 2px;
    font-size: 14px;
    list-style: none;
    text-align: center;
    scroll-behavior: smooth;
    outline: none;
    outline-width: 0;
    outline-color: var(--Text-color);
    color: var(--Text-color);
    background-image: none;
    background-color: var(--bg-color);
}
#chapter {
    min-width: 75px;
}
#url {
    max-width: 40px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    padding: 0px;
    font-size: 14px;
    text-align: center;
    color: var(--Text-color);
    background-color: var(--bg-color);
}

#openSettings {
    position: absolute;
    right: 10px;
    background: none;
    border: none;
    cursor: pointer;
}

#openSettings .icon {
    width: 24px;
    height: 24px;
    opacity: 0.8;
}

#openSettings:hover .icon {
    opacity: 1;
}

#spreadsheetPrompt {
    display:none;
}

#statusSheetURL, 
#statusSaveDefaultInput,
#statusSaveDefaultInputInputTextMenu {
    color: green;
}
.HDRSS_Input {
    background-color: var(--bg-color);
    color: var(--Text-color);
    border: 1px solid var(--Btn);
    border-radius: 4px;
    padding: 8px 16px;
    cursor: pointer;

    font-size: 14px;
    list-style: none;
    text-align: center;
    scroll-behavior: smooth;
}

.titleHeader {
    font-size: large;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 15px;
    padding-bottom: 15px;
}
.ContainerHeader {
    width: 100%;
    border-top: 1px solid var(--hr);
    border-bottom: 1px solid var(--hr);
}

/* ---- sort ------ */
/* Root container */
.mainContainerHeader {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
    background: var(--bg-color);
    border-radius: 0 0 8px 8px;
    font-family: system-ui, sans-serif;
    width: 100%;
    box-sizing: border-box;
}

/* Search bar */
.filter-search {
    width: 100%;
    position: relative;
}

.autocomplete-item:hover {
    background: var(--Btn-hover);
}

#filter-search {
    width: 100%;
    padding: 6px 8px;
    border-radius: 6px;
    border: 1px solid var(--Btn);
    background: var(--bg-color);
}

.autocompleteContainer {
    position: absolute;
    background: var(--bg-color);
    border: 1px solid var(--Btn);
    border-top: none;
    border-radius: 0 0 8px 8px;
    width: 34.2em;
    max-height: 250px;
    overflow-y: auto;
    z-index: 999;
    top: 5.5em;
    overflow: hidden;
}

.autocomplete-item {
    padding: 6px 10px;
    cursor: pointer;
    transition: background 0.2s ease;
}

.autocomplete-item:hover,
.autocomplete-item.highlighted {
    background: var(--Btn_hover);
    color: var(--Text-color);
}



.filter-search input[type="text"] {
    width: 100%;
    padding: 10px 12px;
    font-size: 1rem;
    border: 1px solid var(--Btn);
    border-radius: 6px;
    box-sizing: border-box;
}
.search-container {
    width: 100%;
    display: flex;
    flex-direction: row;
    height: 32px;
}
.search-input {
    width: 100%;
    background-color: var(--Input-colorV2);
    color: var(--Text-color);
    outline-color: var(--Btn);
    text-emphasis-color: var(--Btn);
    accent-color: var(--Text-color);
    border: 1px solid var(--Btn);
    border-right: none;
    border-radius: 0;
}
.search-input:focus {
    outline: 1px invert var(--Btn);
}
.filter-header-container {
    display: flex;
    flex-direction: row;
    align-items: center;
}
.filter-header-symbol {
	position: initial;
	display: block;
	height: 0.5rem;
	width: 0.5rem;
	transform: translateY(-100%) rotate(45deg);
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4,0,0.2,1);
	transition-duration: 0.2s;
	content: "";
	transform-origin: 75% 75%;
	box-shadow: 2px 2px;
	pointer-events: none;
    margin-left: 10px;
    margin-right: 5px;
    margin-bottom: 0px;
    margin-top: 15px;
}
.filterSectionTitle {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
    -webkit-user-select: none;
    user-select: none;
}
.filter-header-text {
    padding-top: 2px;
    margin-top: 0;
    -webkit-user-select: none;
    user-select: none;
    margin-bottom: 0;
}
.filter-header-symbol[data-filter-state="up"] {
    transform: translateY(-50%) rotate(225deg);
    
}
.filter-header-container:has(.filter-header-symbol[data-filter-state="up"]) ~ .filter-list {
    max-height: 500px;
    transform: translateY(0);
    opacity: 1;
}

.filter-search input[type="text"]:focus {
    outline: none;
    border-color: #007aff;
    box-shadow: 0 0 4px rgba(0, 122, 255, 0.4);
}
.filter-section-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 0.4rem;
    background: var(--bg-color);
    border: 10 solid var(--Btn);
    border-radius: 6px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.05);
    justify-content: center;
    
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    transform: translateY(-10px);
    transition: max-height 0.3s ease, transform 0.3s ease, opacity 0.3s ease;
}
.search-container:has(.filterSectionTitle[data-filter-display="flex"]) ~ .filter-section-container {
    max-height: 500px;
    transform: translateY(0);
    opacity: 1;
}

/* Each filter section (Type, Status, etc.) */
.filter-section {
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
    background: var(--bg-color);
    padding: 0.8rem;
    border-radius: 6px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.05);
    align-items: center;
    border: 1px solid var(--Btn);
    width: 150px;
    height: fit-content;
    padding-bottom: 15px;
}
.filter-header {
    margin: 0;
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--Text-color);
    border-bottom: 1px solid var(--Btn);
    padding-bottom: 0.3rem;
}

/* List of checkboxes under each filter */
.filter-list {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    margin-top: 0.4rem;

    max-height: 0;
    overflow: hidden;
    opacity: 0;
    transform: translateY(-10px);
    transition: max-height 0.3s  cubic-bezier(0.4,0,0.2,1), transform 0.3s  cubic-bezier(0.4,0,0.2,1), opacity 0.3s ease;
}

/* Each checkbox + label combo */
.filter-item-container {
    display: flex;
    align-items: center;
    gap: 0.4rem;
    cursor: pointer;
}

/* Custom SVG checkbox box */
.custom-checkbox {
    width: 20px;
    height: 20px;
    border: 1px solid var(--Btn);
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    background-color: var(--bg-color);
    transition: all 0.2s ease;
}

/* Hover highlight */
.custom-checkbox:hover {
    box-shadow: 0 0 0 2px rgba(0, 122, 255, 0.2);
}

/* Neutral (empty) */
.custom-checkbox[data-state="0"] {
    background: none;
}

/* Include (+) */
.custom-checkbox[data-state="1"] {
    background: url('data:image/svg+xml;utf8,\<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16">\<line x1="8" y1="2" x2="8" y2="14" stroke="%2300aa00" stroke-width="2"/>\<line x1="2" y1="8" x2="14" y2="8" stroke="%2300aa00" stroke-width="2"/>\</svg>') center/contain no-repeat;
}

/* Exclude (-) */
.custom-checkbox[data-state="2"] {
    background: url('data:image/svg+xml;utf8,\<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16">\<line x1="2" y1="8" x2="14" y2="8" stroke="%23ff3b30" stroke-width="2"/>\</svg>') center/contain no-repeat;
}

/* Label */
.filter-item-container label {
    -webkit-user-select:none;
    user-select: none;
    font-size: 0.9rem;
    color: var(--Text-color);
}

/* Responsive: stack filters nicely */
@media (max-width: 600px) {
    .filter-list {
        flex-direction: column;
    }
}


.RSS-entries-item,
.RSS-Notification-item {
    border: 1px solid var(--Btn);
    background-color: var(--bg-color);
    border-radius: 4px;
    padding: 8px 16px;
    display: flex;
    flex: content;
    align-items: center;
    flex-direction: column;
    color: var(--Text-color);
    transition: background-color 0.3s ease;
    height: 40px;
}

.RSS-entries-item:hover,
.RSS-Notification-item:hover {
    background-color: var(--Btn_hover);
    cursor: pointer;
}
#RSS-entries,
#RSS-Notification {
    overflow: scroll;
    width: 100%;
}
.RSS-entries-item-footer,
.RSS-Notification-item-footer {
    font-size: 12px;
    color: gray;
    margin-top: -8px;
}
.RSS-entries-item-image,
.RSS-Notification-item-image {
	width: 40px;
	height: 40px;
	object-fit: fill;
	border-radius: 50%;
	padding: 2px;
    position: absolute;
    left: 5px;
    padding-top: 15px;
    margin: 0;
}
.RSS-entries-item-info,
.RSS-Notification-item-info {
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: space-evenly;
    padding: 0 15px;
}
.RSS-entries-item-title,
.RSS-Notification-item-title {
    font-weight: bold;
    font-size: 16px;
    padding-left: 10px;
    padding-right: 10px;
}
.RSS-entries-item-chapter,
.RSS-Notification-item-chapter {
    font-weight: bold;
    font-size: 16px;
    padding-left: 10px;
    padding-right: 10px;
}
.RSS-entries-item-progress,
.RSS-Notification-item-progress {
    font-weight: bold;
    font-size: 16px;
    padding-left: 10px;
    padding-right: 10px;
    right: 0;
    position: absolute;
}
#subscribeBtn {
    float: right;
    position: relative;
}
#subscribeBtn:disabled {
    cursor:not-allowed;
}
#HDRSS-subscribe-container {
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: end;
    margin-bottom: 5px;
    position: relative;
}
#HDRSS-subscribe-container:hover #Type_HDRSS,
#HDRSS-subscribe-container:hover #title_HDRSS,
#subscribeBtn:hover + #Type_HDRSS + #title_HDRSS {
    transform: translateX(0);
    opacity: 1;
    pointer-events: auto;
}
#Type_HDRSS:not(:focus) {
    transform: translateX(20%);
    opacity: 0;
    pointer-events: none; /* prevents accidental hover */
    transition: transform 0.3s ease, opacity 0.3s ease;
}
#title_HDRSS {
    width: max-content;
    flex: 1;
    cursor: text;
}
#title_HDRSS:not(:focus) {
    transform: translateX(50%);
    opacity: 0;
    pointer-events: none; /* prevents accidental hover */
    transition: transform 0.3s ease, opacity 0.3s ease;
}
/* --- footer --- */
#clear-notifications {
    height: 100%;
    padding: 0 15px;
}
#openFullPageRSS {
    height: 100%;
    padding: 0 15px;
}
#RSS-latest-sync-div {
    padding-left: 5px;
    padding-right: 5px;
    width: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    height: 100%;
}
#RSS-sync-Manual {
    height: 100%;
    padding: 0 15px;
}
#version {
    display: flex;
    align-items: center;
    justify-content: center;
    padding-left: 15px;
    padding-right: 15px;
    height: 100%;
}
/* --- context-menu --- */

.custom-context-menu {
    position: sticky;
    background: #222;
    color: white;
    border-radius: 8px;
    padding: 4px 0;
    box-shadow: 0 2px 8px rgba(0,0,0,0.3);
    z-index: 10000;
    min-width: 180px;
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-self: center;
    width: fit-content;
    flex-flow: column;
    border: 1px solid #555;
}
.context-menu-item-container {
    width: 100%;
}
.menu-item {
    padding: 8px 12px;
    padding-left: 25px;
    cursor: pointer;
    -webkit-user-select: none;
    user-select: none;
}

.menu-item:hover {
    background: #444;
}

.menu-separator {
    height: 1px;
    background: #555;
    margin: 4px 0;
    width: 100%;
}


.promptSection {
    display: none;
    background-color: rgba(0, 0, 0, 0.2);
    align-items: center;
    justify-content: center;
}

.genericInput {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 80%;
    background-color: var(--Input-colorV2);
    color: var(--Text-color);
    outline-color: var(--Btn);
    text-emphasis-color: var(--Btn);
    accent-color: var(--Text-color);
    border: 1px solid var(--Btn);
    border-right: none;
    border-radius: 0;
}
.genericInput:focus {
    outline: 1px invert var(--Btn);
}

.genericLabel {
    background-color: var(--bg-color);
    color: var(--Text-color);
}
.genericButton1 {
    background-color: var(--bg-color);
    color: var(--Text-color);
}
.genericButton2 {
    background-color: var(--bg-color);
    color: var(--Text-color);
}